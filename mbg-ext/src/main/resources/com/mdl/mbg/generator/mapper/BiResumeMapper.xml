<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mdl.mbg.generator.mapper.BiResumeMapperExt">
  <resultMap id="BaseResultMap" type="com.mdl.mbg.generator.model.BiResume">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="job_seeker_name" jdbcType="VARCHAR" property="jobSeekerName" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="current_state" jdbcType="VARCHAR" property="currentState" />
    <result column="in_way" jdbcType="VARCHAR" property="inWay" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="plat_id" jdbcType="VARCHAR" property="platId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="work_length_max" jdbcType="INTEGER" property="workLengthMax" />
    <result column="work_length_min" jdbcType="INTEGER" property="workLengthMin" />
    <result column="work_length" jdbcType="VARCHAR" property="workLength" />
    <result column="is_marry" jdbcType="VARCHAR" property="isMarry" />
    <result column="job_title" jdbcType="VARCHAR" property="jobTitle" />
    <result column="reside_address" jdbcType="VARCHAR" property="resideAddress" />
    <result column="expect_salary_max" jdbcType="INTEGER" property="expectSalaryMax" />
    <result column="expect_salary_min" jdbcType="INTEGER" property="expectSalaryMin" />
    <result column="expect_place" jdbcType="VARCHAR" property="expectPlace" />
    <result column="expect_job" jdbcType="VARCHAR" property="expectJob" />
    <result column="expect_industry" jdbcType="VARCHAR" property="expectIndustry" />
    <result column="photo_path" jdbcType="VARCHAR" property="photoPath" />
    <result column="expect_job_property" jdbcType="VARCHAR" property="expectJobProperty" />
    <result column="political_status" jdbcType="VARCHAR" property="politicalStatus" />
    <result column="university" jdbcType="VARCHAR" property="university" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="bitrh_place" jdbcType="VARCHAR" property="bitrhPlace" />
    <result column="certificate_type" jdbcType="VARCHAR" property="certificateType" />
    <result column="certificate_num" jdbcType="VARCHAR" property="certificateNum" />
    <result column="wechat_num" jdbcType="VARCHAR" property="wechatNum" />
    <result column="health" jdbcType="VARCHAR" property="health" />
    <result column="hobbies" jdbcType="VARCHAR" property="hobbies" />
    <result column="housing_status" jdbcType="VARCHAR" property="housingStatus" />
    <result column="house_area" jdbcType="VARCHAR" property="houseArea" />
    <result column="house_address" jdbcType="VARCHAR" property="houseAddress" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="create_dt" jdbcType="TIMESTAMP" property="createDt" />
    <result column="modify_dt" jdbcType="TIMESTAMP" property="modifyDt" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="sort_no" jdbcType="INTEGER" property="sortNo" />
    <result column="domicile_place" jdbcType="VARCHAR" property="domicilePlace" />
    <result column="self_evaluation" jdbcType="VARCHAR" property="selfEvaluation" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mdl.mbg.generator.model.BiResume">
    <result column="trace_id" jdbcType="LONGVARCHAR" property="traceId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, job_seeker_name, degree, current_state, in_way, phone, plat_id, state, age, email, 
    sex, birthday, work_length_max, work_length_min, work_length, is_marry, job_title, 
    reside_address, expect_salary_max, expect_salary_min, expect_place, expect_job, expect_industry, 
    photo_path, expect_job_property, political_status, university, major, nation, bitrh_place, 
    certificate_type, certificate_num, wechat_num, health, hobbies, housing_status, house_area, 
    house_address, deleted, create_dt, modify_dt, version, sort_no, domicile_place, self_evaluation
  </sql>
  <sql id="Blob_Column_List">
    trace_id
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.mdl.mbg.generator.model.BiResumeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bi_resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.mdl.mbg.generator.model.BiResumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bi_resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bi_resume
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from bi_resume
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mdl.mbg.generator.model.BiResumeExample">
    delete from bi_resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mdl.mbg.generator.model.BiResume">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bi_resume (job_seeker_name, degree, current_state, 
      in_way, phone, plat_id, 
      state, age, email, 
      sex, birthday, work_length_max, 
      work_length_min, work_length, is_marry, 
      job_title, reside_address, expect_salary_max, 
      expect_salary_min, expect_place, expect_job, 
      expect_industry, photo_path, expect_job_property, 
      political_status, university, major, 
      nation, bitrh_place, certificate_type, 
      certificate_num, wechat_num, health, 
      hobbies, housing_status, house_area, 
      house_address, deleted, create_dt, 
      modify_dt, version, sort_no, 
      domicile_place, self_evaluation, trace_id
      )
    values (#{jobSeekerName,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, #{currentState,jdbcType=VARCHAR}, 
      #{inWay,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{platId,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, #{workLengthMax,jdbcType=INTEGER}, 
      #{workLengthMin,jdbcType=INTEGER}, #{workLength,jdbcType=VARCHAR}, #{isMarry,jdbcType=VARCHAR}, 
      #{jobTitle,jdbcType=VARCHAR}, #{resideAddress,jdbcType=VARCHAR}, #{expectSalaryMax,jdbcType=INTEGER}, 
      #{expectSalaryMin,jdbcType=INTEGER}, #{expectPlace,jdbcType=VARCHAR}, #{expectJob,jdbcType=VARCHAR}, 
      #{expectIndustry,jdbcType=VARCHAR}, #{photoPath,jdbcType=VARCHAR}, #{expectJobProperty,jdbcType=VARCHAR}, 
      #{politicalStatus,jdbcType=VARCHAR}, #{university,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{nation,jdbcType=VARCHAR}, #{bitrhPlace,jdbcType=VARCHAR}, #{certificateType,jdbcType=VARCHAR}, 
      #{certificateNum,jdbcType=VARCHAR}, #{wechatNum,jdbcType=VARCHAR}, #{health,jdbcType=VARCHAR}, 
      #{hobbies,jdbcType=VARCHAR}, #{housingStatus,jdbcType=VARCHAR}, #{houseArea,jdbcType=VARCHAR}, 
      #{houseAddress,jdbcType=VARCHAR}, #{deleted,jdbcType=INTEGER}, #{createDt,jdbcType=TIMESTAMP}, 
      #{modifyDt,jdbcType=TIMESTAMP}, #{version,jdbcType=VARCHAR}, #{sortNo,jdbcType=INTEGER}, 
      #{domicilePlace,jdbcType=VARCHAR}, #{selfEvaluation,jdbcType=VARCHAR}, #{traceId,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mdl.mbg.generator.model.BiResume">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bi_resume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobSeekerName != null">
        job_seeker_name,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="currentState != null">
        current_state,
      </if>
      <if test="inWay != null">
        in_way,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="platId != null">
        plat_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="workLengthMax != null">
        work_length_max,
      </if>
      <if test="workLengthMin != null">
        work_length_min,
      </if>
      <if test="workLength != null">
        work_length,
      </if>
      <if test="isMarry != null">
        is_marry,
      </if>
      <if test="jobTitle != null">
        job_title,
      </if>
      <if test="resideAddress != null">
        reside_address,
      </if>
      <if test="expectSalaryMax != null">
        expect_salary_max,
      </if>
      <if test="expectSalaryMin != null">
        expect_salary_min,
      </if>
      <if test="expectPlace != null">
        expect_place,
      </if>
      <if test="expectJob != null">
        expect_job,
      </if>
      <if test="expectIndustry != null">
        expect_industry,
      </if>
      <if test="photoPath != null">
        photo_path,
      </if>
      <if test="expectJobProperty != null">
        expect_job_property,
      </if>
      <if test="politicalStatus != null">
        political_status,
      </if>
      <if test="university != null">
        university,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="bitrhPlace != null">
        bitrh_place,
      </if>
      <if test="certificateType != null">
        certificate_type,
      </if>
      <if test="certificateNum != null">
        certificate_num,
      </if>
      <if test="wechatNum != null">
        wechat_num,
      </if>
      <if test="health != null">
        health,
      </if>
      <if test="hobbies != null">
        hobbies,
      </if>
      <if test="housingStatus != null">
        housing_status,
      </if>
      <if test="houseArea != null">
        house_area,
      </if>
      <if test="houseAddress != null">
        house_address,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="createDt != null">
        create_dt,
      </if>
      <if test="modifyDt != null">
        modify_dt,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="sortNo != null">
        sort_no,
      </if>
      <if test="domicilePlace != null">
        domicile_place,
      </if>
      <if test="selfEvaluation != null">
        self_evaluation,
      </if>
      <if test="traceId != null">
        trace_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobSeekerName != null">
        #{jobSeekerName,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="currentState != null">
        #{currentState,jdbcType=VARCHAR},
      </if>
      <if test="inWay != null">
        #{inWay,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="platId != null">
        #{platId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="workLengthMax != null">
        #{workLengthMax,jdbcType=INTEGER},
      </if>
      <if test="workLengthMin != null">
        #{workLengthMin,jdbcType=INTEGER},
      </if>
      <if test="workLength != null">
        #{workLength,jdbcType=VARCHAR},
      </if>
      <if test="isMarry != null">
        #{isMarry,jdbcType=VARCHAR},
      </if>
      <if test="jobTitle != null">
        #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="resideAddress != null">
        #{resideAddress,jdbcType=VARCHAR},
      </if>
      <if test="expectSalaryMax != null">
        #{expectSalaryMax,jdbcType=INTEGER},
      </if>
      <if test="expectSalaryMin != null">
        #{expectSalaryMin,jdbcType=INTEGER},
      </if>
      <if test="expectPlace != null">
        #{expectPlace,jdbcType=VARCHAR},
      </if>
      <if test="expectJob != null">
        #{expectJob,jdbcType=VARCHAR},
      </if>
      <if test="expectIndustry != null">
        #{expectIndustry,jdbcType=VARCHAR},
      </if>
      <if test="photoPath != null">
        #{photoPath,jdbcType=VARCHAR},
      </if>
      <if test="expectJobProperty != null">
        #{expectJobProperty,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        #{politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="university != null">
        #{university,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="bitrhPlace != null">
        #{bitrhPlace,jdbcType=VARCHAR},
      </if>
      <if test="certificateType != null">
        #{certificateType,jdbcType=VARCHAR},
      </if>
      <if test="certificateNum != null">
        #{certificateNum,jdbcType=VARCHAR},
      </if>
      <if test="wechatNum != null">
        #{wechatNum,jdbcType=VARCHAR},
      </if>
      <if test="health != null">
        #{health,jdbcType=VARCHAR},
      </if>
      <if test="hobbies != null">
        #{hobbies,jdbcType=VARCHAR},
      </if>
      <if test="housingStatus != null">
        #{housingStatus,jdbcType=VARCHAR},
      </if>
      <if test="houseArea != null">
        #{houseArea,jdbcType=VARCHAR},
      </if>
      <if test="houseAddress != null">
        #{houseAddress,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="createDt != null">
        #{createDt,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDt != null">
        #{modifyDt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="sortNo != null">
        #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="domicilePlace != null">
        #{domicilePlace,jdbcType=VARCHAR},
      </if>
      <if test="selfEvaluation != null">
        #{selfEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="traceId != null">
        #{traceId,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mdl.mbg.generator.model.BiResumeExample" resultType="java.lang.Long">
    select count(*) from bi_resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bi_resume
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.jobSeekerName != null">
        job_seeker_name = #{record.jobSeekerName,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.currentState != null">
        current_state = #{record.currentState,jdbcType=VARCHAR},
      </if>
      <if test="record.inWay != null">
        in_way = #{record.inWay,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.platId != null">
        plat_id = #{record.platId,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.workLengthMax != null">
        work_length_max = #{record.workLengthMax,jdbcType=INTEGER},
      </if>
      <if test="record.workLengthMin != null">
        work_length_min = #{record.workLengthMin,jdbcType=INTEGER},
      </if>
      <if test="record.workLength != null">
        work_length = #{record.workLength,jdbcType=VARCHAR},
      </if>
      <if test="record.isMarry != null">
        is_marry = #{record.isMarry,jdbcType=VARCHAR},
      </if>
      <if test="record.jobTitle != null">
        job_title = #{record.jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.resideAddress != null">
        reside_address = #{record.resideAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.expectSalaryMax != null">
        expect_salary_max = #{record.expectSalaryMax,jdbcType=INTEGER},
      </if>
      <if test="record.expectSalaryMin != null">
        expect_salary_min = #{record.expectSalaryMin,jdbcType=INTEGER},
      </if>
      <if test="record.expectPlace != null">
        expect_place = #{record.expectPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.expectJob != null">
        expect_job = #{record.expectJob,jdbcType=VARCHAR},
      </if>
      <if test="record.expectIndustry != null">
        expect_industry = #{record.expectIndustry,jdbcType=VARCHAR},
      </if>
      <if test="record.photoPath != null">
        photo_path = #{record.photoPath,jdbcType=VARCHAR},
      </if>
      <if test="record.expectJobProperty != null">
        expect_job_property = #{record.expectJobProperty,jdbcType=VARCHAR},
      </if>
      <if test="record.politicalStatus != null">
        political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.university != null">
        university = #{record.university,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.bitrhPlace != null">
        bitrh_place = #{record.bitrhPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateType != null">
        certificate_type = #{record.certificateType,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateNum != null">
        certificate_num = #{record.certificateNum,jdbcType=VARCHAR},
      </if>
      <if test="record.wechatNum != null">
        wechat_num = #{record.wechatNum,jdbcType=VARCHAR},
      </if>
      <if test="record.health != null">
        health = #{record.health,jdbcType=VARCHAR},
      </if>
      <if test="record.hobbies != null">
        hobbies = #{record.hobbies,jdbcType=VARCHAR},
      </if>
      <if test="record.housingStatus != null">
        housing_status = #{record.housingStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.houseArea != null">
        house_area = #{record.houseArea,jdbcType=VARCHAR},
      </if>
      <if test="record.houseAddress != null">
        house_address = #{record.houseAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
      <if test="record.createDt != null">
        create_dt = #{record.createDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDt != null">
        modify_dt = #{record.modifyDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.sortNo != null">
        sort_no = #{record.sortNo,jdbcType=INTEGER},
      </if>
      <if test="record.domicilePlace != null">
        domicile_place = #{record.domicilePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.selfEvaluation != null">
        self_evaluation = #{record.selfEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="record.traceId != null">
        trace_id = #{record.traceId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update bi_resume
    set id = #{record.id,jdbcType=VARCHAR},
      job_seeker_name = #{record.jobSeekerName,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      current_state = #{record.currentState,jdbcType=VARCHAR},
      in_way = #{record.inWay,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      plat_id = #{record.platId,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      age = #{record.age,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      work_length_max = #{record.workLengthMax,jdbcType=INTEGER},
      work_length_min = #{record.workLengthMin,jdbcType=INTEGER},
      work_length = #{record.workLength,jdbcType=VARCHAR},
      is_marry = #{record.isMarry,jdbcType=VARCHAR},
      job_title = #{record.jobTitle,jdbcType=VARCHAR},
      reside_address = #{record.resideAddress,jdbcType=VARCHAR},
      expect_salary_max = #{record.expectSalaryMax,jdbcType=INTEGER},
      expect_salary_min = #{record.expectSalaryMin,jdbcType=INTEGER},
      expect_place = #{record.expectPlace,jdbcType=VARCHAR},
      expect_job = #{record.expectJob,jdbcType=VARCHAR},
      expect_industry = #{record.expectIndustry,jdbcType=VARCHAR},
      photo_path = #{record.photoPath,jdbcType=VARCHAR},
      expect_job_property = #{record.expectJobProperty,jdbcType=VARCHAR},
      political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      university = #{record.university,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      bitrh_place = #{record.bitrhPlace,jdbcType=VARCHAR},
      certificate_type = #{record.certificateType,jdbcType=VARCHAR},
      certificate_num = #{record.certificateNum,jdbcType=VARCHAR},
      wechat_num = #{record.wechatNum,jdbcType=VARCHAR},
      health = #{record.health,jdbcType=VARCHAR},
      hobbies = #{record.hobbies,jdbcType=VARCHAR},
      housing_status = #{record.housingStatus,jdbcType=VARCHAR},
      house_area = #{record.houseArea,jdbcType=VARCHAR},
      house_address = #{record.houseAddress,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=INTEGER},
      create_dt = #{record.createDt,jdbcType=TIMESTAMP},
      modify_dt = #{record.modifyDt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=VARCHAR},
      sort_no = #{record.sortNo,jdbcType=INTEGER},
      domicile_place = #{record.domicilePlace,jdbcType=VARCHAR},
      self_evaluation = #{record.selfEvaluation,jdbcType=VARCHAR},
      trace_id = #{record.traceId,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bi_resume
    set id = #{record.id,jdbcType=VARCHAR},
      job_seeker_name = #{record.jobSeekerName,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      current_state = #{record.currentState,jdbcType=VARCHAR},
      in_way = #{record.inWay,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      plat_id = #{record.platId,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      age = #{record.age,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      work_length_max = #{record.workLengthMax,jdbcType=INTEGER},
      work_length_min = #{record.workLengthMin,jdbcType=INTEGER},
      work_length = #{record.workLength,jdbcType=VARCHAR},
      is_marry = #{record.isMarry,jdbcType=VARCHAR},
      job_title = #{record.jobTitle,jdbcType=VARCHAR},
      reside_address = #{record.resideAddress,jdbcType=VARCHAR},
      expect_salary_max = #{record.expectSalaryMax,jdbcType=INTEGER},
      expect_salary_min = #{record.expectSalaryMin,jdbcType=INTEGER},
      expect_place = #{record.expectPlace,jdbcType=VARCHAR},
      expect_job = #{record.expectJob,jdbcType=VARCHAR},
      expect_industry = #{record.expectIndustry,jdbcType=VARCHAR},
      photo_path = #{record.photoPath,jdbcType=VARCHAR},
      expect_job_property = #{record.expectJobProperty,jdbcType=VARCHAR},
      political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      university = #{record.university,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      bitrh_place = #{record.bitrhPlace,jdbcType=VARCHAR},
      certificate_type = #{record.certificateType,jdbcType=VARCHAR},
      certificate_num = #{record.certificateNum,jdbcType=VARCHAR},
      wechat_num = #{record.wechatNum,jdbcType=VARCHAR},
      health = #{record.health,jdbcType=VARCHAR},
      hobbies = #{record.hobbies,jdbcType=VARCHAR},
      housing_status = #{record.housingStatus,jdbcType=VARCHAR},
      house_area = #{record.houseArea,jdbcType=VARCHAR},
      house_address = #{record.houseAddress,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=INTEGER},
      create_dt = #{record.createDt,jdbcType=TIMESTAMP},
      modify_dt = #{record.modifyDt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=VARCHAR},
      sort_no = #{record.sortNo,jdbcType=INTEGER},
      domicile_place = #{record.domicilePlace,jdbcType=VARCHAR},
      self_evaluation = #{record.selfEvaluation,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mdl.mbg.generator.model.BiResume">
    update bi_resume
    <set>
      <if test="jobSeekerName != null">
        job_seeker_name = #{jobSeekerName,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="currentState != null">
        current_state = #{currentState,jdbcType=VARCHAR},
      </if>
      <if test="inWay != null">
        in_way = #{inWay,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="platId != null">
        plat_id = #{platId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="workLengthMax != null">
        work_length_max = #{workLengthMax,jdbcType=INTEGER},
      </if>
      <if test="workLengthMin != null">
        work_length_min = #{workLengthMin,jdbcType=INTEGER},
      </if>
      <if test="workLength != null">
        work_length = #{workLength,jdbcType=VARCHAR},
      </if>
      <if test="isMarry != null">
        is_marry = #{isMarry,jdbcType=VARCHAR},
      </if>
      <if test="jobTitle != null">
        job_title = #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="resideAddress != null">
        reside_address = #{resideAddress,jdbcType=VARCHAR},
      </if>
      <if test="expectSalaryMax != null">
        expect_salary_max = #{expectSalaryMax,jdbcType=INTEGER},
      </if>
      <if test="expectSalaryMin != null">
        expect_salary_min = #{expectSalaryMin,jdbcType=INTEGER},
      </if>
      <if test="expectPlace != null">
        expect_place = #{expectPlace,jdbcType=VARCHAR},
      </if>
      <if test="expectJob != null">
        expect_job = #{expectJob,jdbcType=VARCHAR},
      </if>
      <if test="expectIndustry != null">
        expect_industry = #{expectIndustry,jdbcType=VARCHAR},
      </if>
      <if test="photoPath != null">
        photo_path = #{photoPath,jdbcType=VARCHAR},
      </if>
      <if test="expectJobProperty != null">
        expect_job_property = #{expectJobProperty,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        political_status = #{politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="university != null">
        university = #{university,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="bitrhPlace != null">
        bitrh_place = #{bitrhPlace,jdbcType=VARCHAR},
      </if>
      <if test="certificateType != null">
        certificate_type = #{certificateType,jdbcType=VARCHAR},
      </if>
      <if test="certificateNum != null">
        certificate_num = #{certificateNum,jdbcType=VARCHAR},
      </if>
      <if test="wechatNum != null">
        wechat_num = #{wechatNum,jdbcType=VARCHAR},
      </if>
      <if test="health != null">
        health = #{health,jdbcType=VARCHAR},
      </if>
      <if test="hobbies != null">
        hobbies = #{hobbies,jdbcType=VARCHAR},
      </if>
      <if test="housingStatus != null">
        housing_status = #{housingStatus,jdbcType=VARCHAR},
      </if>
      <if test="houseArea != null">
        house_area = #{houseArea,jdbcType=VARCHAR},
      </if>
      <if test="houseAddress != null">
        house_address = #{houseAddress,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="createDt != null">
        create_dt = #{createDt,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDt != null">
        modify_dt = #{modifyDt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="sortNo != null">
        sort_no = #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="domicilePlace != null">
        domicile_place = #{domicilePlace,jdbcType=VARCHAR},
      </if>
      <if test="selfEvaluation != null">
        self_evaluation = #{selfEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="traceId != null">
        trace_id = #{traceId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mdl.mbg.generator.model.BiResume">
    update bi_resume
    set job_seeker_name = #{jobSeekerName,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      current_state = #{currentState,jdbcType=VARCHAR},
      in_way = #{inWay,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      plat_id = #{platId,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      work_length_max = #{workLengthMax,jdbcType=INTEGER},
      work_length_min = #{workLengthMin,jdbcType=INTEGER},
      work_length = #{workLength,jdbcType=VARCHAR},
      is_marry = #{isMarry,jdbcType=VARCHAR},
      job_title = #{jobTitle,jdbcType=VARCHAR},
      reside_address = #{resideAddress,jdbcType=VARCHAR},
      expect_salary_max = #{expectSalaryMax,jdbcType=INTEGER},
      expect_salary_min = #{expectSalaryMin,jdbcType=INTEGER},
      expect_place = #{expectPlace,jdbcType=VARCHAR},
      expect_job = #{expectJob,jdbcType=VARCHAR},
      expect_industry = #{expectIndustry,jdbcType=VARCHAR},
      photo_path = #{photoPath,jdbcType=VARCHAR},
      expect_job_property = #{expectJobProperty,jdbcType=VARCHAR},
      political_status = #{politicalStatus,jdbcType=VARCHAR},
      university = #{university,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      bitrh_place = #{bitrhPlace,jdbcType=VARCHAR},
      certificate_type = #{certificateType,jdbcType=VARCHAR},
      certificate_num = #{certificateNum,jdbcType=VARCHAR},
      wechat_num = #{wechatNum,jdbcType=VARCHAR},
      health = #{health,jdbcType=VARCHAR},
      hobbies = #{hobbies,jdbcType=VARCHAR},
      housing_status = #{housingStatus,jdbcType=VARCHAR},
      house_area = #{houseArea,jdbcType=VARCHAR},
      house_address = #{houseAddress,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=INTEGER},
      create_dt = #{createDt,jdbcType=TIMESTAMP},
      modify_dt = #{modifyDt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=VARCHAR},
      sort_no = #{sortNo,jdbcType=INTEGER},
      domicile_place = #{domicilePlace,jdbcType=VARCHAR},
      self_evaluation = #{selfEvaluation,jdbcType=VARCHAR},
      trace_id = #{traceId,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mdl.mbg.generator.model.BiResume">
    update bi_resume
    set job_seeker_name = #{jobSeekerName,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      current_state = #{currentState,jdbcType=VARCHAR},
      in_way = #{inWay,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      plat_id = #{platId,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      work_length_max = #{workLengthMax,jdbcType=INTEGER},
      work_length_min = #{workLengthMin,jdbcType=INTEGER},
      work_length = #{workLength,jdbcType=VARCHAR},
      is_marry = #{isMarry,jdbcType=VARCHAR},
      job_title = #{jobTitle,jdbcType=VARCHAR},
      reside_address = #{resideAddress,jdbcType=VARCHAR},
      expect_salary_max = #{expectSalaryMax,jdbcType=INTEGER},
      expect_salary_min = #{expectSalaryMin,jdbcType=INTEGER},
      expect_place = #{expectPlace,jdbcType=VARCHAR},
      expect_job = #{expectJob,jdbcType=VARCHAR},
      expect_industry = #{expectIndustry,jdbcType=VARCHAR},
      photo_path = #{photoPath,jdbcType=VARCHAR},
      expect_job_property = #{expectJobProperty,jdbcType=VARCHAR},
      political_status = #{politicalStatus,jdbcType=VARCHAR},
      university = #{university,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      bitrh_place = #{bitrhPlace,jdbcType=VARCHAR},
      certificate_type = #{certificateType,jdbcType=VARCHAR},
      certificate_num = #{certificateNum,jdbcType=VARCHAR},
      wechat_num = #{wechatNum,jdbcType=VARCHAR},
      health = #{health,jdbcType=VARCHAR},
      hobbies = #{hobbies,jdbcType=VARCHAR},
      housing_status = #{housingStatus,jdbcType=VARCHAR},
      house_area = #{houseArea,jdbcType=VARCHAR},
      house_address = #{houseAddress,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=INTEGER},
      create_dt = #{createDt,jdbcType=TIMESTAMP},
      modify_dt = #{modifyDt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=VARCHAR},
      sort_no = #{sortNo,jdbcType=INTEGER},
      domicile_place = #{domicilePlace,jdbcType=VARCHAR},
      self_evaluation = #{selfEvaluation,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>